name: Infra Apply

on:
  push:
    paths:
      - 'infra/**'
      - '!**/*.md'
    branches:
      - master

defaults:
  run:
    working-directory: ./infra

jobs:
  apply:
    env:
      TF_CLI_ARGS: -no-color
      TF_WORKSPACE: prod
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
          
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-central-1
          
      - name: validate
        id: validate
        run: |
          terraform init
          terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file ${TF_WORKSPACE}.tfvars
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v4
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
              
      - name: apply
        id: apply
        run: |
          terraform apply -auto-approve -var-file ${TF_WORKSPACE}.tfvars

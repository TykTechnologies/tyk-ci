name: Test Processing
on:
  repository_dispatch:
    types: [process-test-results]

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  S3_BUCKET: s3://assets.dev.tyk.technology/testreports  

jobs:
  process-test-results:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1				
      - name: Process test results
        run: |
          echo "Processing test results..."
          echo "${{ github.event.client_payload }}"
      
      - name: Download report from S3
        run: aws s3 cp ${{ env.S3_BUCKET }}/${{ github.event.client_payload.file }} /tmp/report.xml

      - name: Convert XML report into Json
        run: |
          npx junit2json -p /tmp/report.xml > /tmp/report.json
          cat /tmp/report.json
          
      - name: Add metadata to report
        run: |
          jq --arg repo "${{ github.event.client_payload.meta.repo }}" \
          --arg branch "${{ github.event.client_payload.meta.branch }}" \
          --arg commit "${{ github.event.client_payload.meta.commit }}" \
          --arg test_suite_version "${{ github.event.client_payload.meta.test_suite_version }}" \
          --arg test_suite_name "${{ github.event.client_payload.meta.test_suite_name }}" \
          --arg test_suite_run "${{ github.event.client_payload.meta.test_suite_run }}" \
          --arg db "${{ github.event.client_payload.meta.db }}" \
          --arg conf "${{ github.event.client_payload.meta.conf }}" \
          --arg pump_compatibility "${{ github.event.client_payload.meta.pump_compatibility }}" \
          --arg sink_compatibility "${{ github.event.client_payload.meta.sink_compatibility }}" \
          '. + {repo: $repo, branch: $branch, commit: $commit, test_suite_version: $test_suite_version, test_suite_name: $test_suite_name, test_suite_run: $test_suite_run, db: $db, conf: $conf, pump_compatibility: $pump_compatibility, sink_compatibility: $sink_compatibility}' /tmp/report.json > /tmp/report_with_metadata.json
          cat /tmp/report_with_metadata.json

      - name: Insert into MongoDB
        uses: mongodb-js/query@v2
        with:
          mongodb_uri: mongodb+srv://mongo:${{ secrets.CI_MONGO_PASS }}@tyk-ci.pzeexqy.mongodb.net/
          database: test
          collection: test_report
          query: |
            db.test_report.insertOne($(cat /tmp/report_with_metadata.json))
        
